/* 
    주제 : 인사 관리 시스템
        1. 인사 정보 등록   : 이름 , 생년월일 등등 그외 임의 추가가능
            - 각 정보들을 HTML로 입력받아서 JS에서 등록 처리 하기.

        2. 전체 인사 정보 출력 내역 : 
            - 현재 등록된 모든 인사 정보를 출력

        3. 각 인사의 점수 등록 : 각 인사별 상반기, 하반기 등등 그외 임의 추가
            - 각 상반기, 하반기 점수를 GRML로 입력받아서 JS에서 등록 처리하기.

        4. 각 인사별 전체 점수 정보 출력 내역
            - 각 인사별 점수를 출력하시오.
    
    1. 위 요구 사항에 따른 화면 설계/ 구성

    2. 위 요구사항에 따른 메모리(변수, 배열, csv)설계를 구성

        이걸 객체 활용해서 만듬
*/

//html을 만든뒤 메모리 구성은 어떻게 해야하는가?
// - 사원 정보 와 각 사원의 연도별 점수평가 메모리 구성
/*  1. 저장할 데이터들을 모두 생각한다.
        - 사원명, 생년월일, 연도, 상반기점수, 하반기 점수
    2. 데이터끼리 관계성을 파악해서 분류하기
        - 사원의 정보(사원명,생년월일)와 점수(연도,상반기,하반기점수) 를 나누자

        - 상하관계 , 일대 다 관계, 범주를 잘 생각해놓기 , 1개의 데이터가 다른
        여러개의 데이터를 참조하는것

            - 하나의 사원이 여러개 연도별 점수를 가질 수 있다.
                -하나의 사원은 년도 점수 점수를 가질수 있고
                 다른년도의 점수를 가질 수 있다.

            - 하나의 회원이 여러개 게시물을 작성할 수 있다.
            - 하나의 카테고리의 여러개 제품을 등록할 수 있다.

    3. 데이터 분류 간의 관계성 연결
        - 사원정보(상위/ 식별가능한 필드) , 점수정보(하위)
        
            

    */
    // [1] 객체지향으로 메모리 구성
        //1, 두사원의 객체 정보를 샘플로 해서 2개의 객체 생성
    let 사원1 = { no :1, name : '유재석' , birth : '2000-10-2'}
    let 사원2 = { no :2, name : '강호동' , birth : '2010-7-2'}

        //2. 사원목록 등록
    let 사원목록 =[] /* 배열만들고 넣기 */
    사원목록.push(사원1); //등록
    사원목록.push(사원2);
    
    
    //console.log(사원목록);

        //3. 평가 객체 생성, 샘플3개
    let 점수1 = {no:1, year:'2024', first : 100, second : 80 }; //유재석 2024평가등록
    let 점수2 = {no:2, year:'2024', first : 92, second : 71 }; //강호동의 2024평가 등록
    let 점수3 = {no:1, year:'2023', first : 82, second : 97 }; //유재석의 2023평가 등록

    //4. 평가 목록 등록
    let 평가목록 = [] /* 배열 만들고 넣기 */
    평가목록.push(점수1);
    평가목록.push(점수2);
    평가목록.push(점수3);
    //console.log(평가목록); // 평가목록내 세번째 위치한 점수는 누구의 점수인가요? 유재석

    //[*]사원번호 전역변수
    let eno = 3; // <-------샘플 2개라서 다음 등록된 사원번호는 3번부터 시작
    //eno를 왜 전역변수로 놓았는지 확인해보기
    
    //[1] 사원 등록 함수, 실행조건 : [사원등록]버튼 클릭할때 실행
    function 사원등록() {
        //1. 입력 , 각 선택자(클래스)와 일치한 input의 value 값 가져오기
        let rename = document.querySelector('.name').value;
       // console.log(name);
        
        let rebirth = document.querySelector('.birth').value;
        //console.log(birth);
        

        //2. 처리
            // - 입력받은 값을 객체{속성명 : 입력받은값}로 만들기

            //console.log(eno);
            
        let info = {
            no : eno, //사원번호는 자동으로 1씩증가
            name : rename, // 사원명은 입력받은 name
            bibirth : rebirth // 생년월일은 입력받은 birth
        }

        //console.log(info);
        
        // - 생성한 객체를 배열에 추가 하기.
        사원목록.push(info);
        

        eno++; // 만일 사원등록 성공시 eno(사원번호)1 증가한다. 
        //다음회원은 1증가된 사원번호를 받을 예정
        //3. 출력
        //console.log(사원목록);
        
        사원전체출력(); // 처리시
    } 

    //[2] 사원 정보 전체 출력 함수, 실행조건 
    //:1. JS실행될때 최초 1번 실행 
    //2. 사원목록(배열), 변화(저장/수정/삭제)가 있을때 마다
    //사원전체출력()// 최초실행시 출력
    function 사원전체출력(){
        //1. 어디에
        let tbody = document.querySelector('.사원테이블');
        console.log(tbody);
        

        //2. 무엇을
        let html = ``;
        // - 사원목록내 모든 사원정보를 HTML로 구성하기
        for( let index = 0; index<=사원목록.length-1; index++){
            //index 는 0부터 사원목록의 마지막 인덱스까지 1씩 증가 반복
            let info = 사원목록[index]; // index번째의 사원정보 1개 호출
            html += `<tr>
                        <td> ${info.no} </td>
                        <td> ${info.name} </td>
                        <td> ${info.birth} </td>
                        <td>
                            <button onclick="평가등록출력(${info.사원번호})" type="button">평가등록</button>
                            <button type="button">평가결과</button>
                        </td>
                    </tr>`
                    
                    
        }
        //console.log(html);
        //3. 출력
        tbody.innerHTML = html;

    }

// [3] 평가 등록 구역 출력 함수, 실행조건 : [평가등록] 버튼을 클릭했을때
function 평가등록출력(클릭된사원번호){ //매개변수 : 클릭된 사원번호가
    //console.log(클릭된사원번호);
    // 사원번호를 이용한 사원정보 찾기
    let 검색사원 = null; //2. '검색사원'을 찾기 전 변수를 선언하여 결과를 저장할 변수, null 객체가 없다는 뜻
    for(let index = 0; index <= 사원목록.length-1; index++){
        
        let info = 사원목록[index];// index번째의 사원정보(객체)호출

        if(info.사원번호 == 클릭된사원번호){//index번째의 사원번호가 클릭한 사원번호와 같으면

            let 검색사원 = info;// for밖에서 선언한 검색사원 변수에 대입한다.

            break; // 만일 찾았으면 for문종료
        }
    }
    if(검색사원 == null){//만일 검색사원의 값이 null이면 못찾았다.

        alert('사원정보가 없습니다')

        return; //현재함수 종료
    }
    //1.어디에 
    let div = document.querySelector('.평가입력구역')
    //2.무엇을
    let html = ` <h3>사원 평가 등록</h3><!-- 이렇게 예시를 만들어줘야함 -->
        <form>
            <h6> 평가사원명 : ${검색사원.사원명} </h6>
            평가연도 : <input type="text"/>
            상반기평가 : <input type="text"/>
            하반기평가 : <input type="text"/>
            <button type="button">점수등록</button>
        </form>`
    //3.출력
    div.innerHTML = html
}//f end
    

    