
/* 
    for



*/





//[1] for 중첩
    // i는 3번 반복, j는 5번 반복 => 총 i의 출력횟수:3 , 총 j의 출력횟수 : 15번 
    // 즉] 상위 for문이 1회전 마다 하위 for문 전체 회전한다.

for( let i = 1 ; i <=3; 1++) { 
    //i는 1부터 3 이하까지 1씩 증가한다.
    console.log(i);

    for( let j = 1; j <= 5; j++ ) {
        //j는 1부터 5이하까지 1씩 증가한다.
        console.log(`---->${j}`);
    } //for2 end

} //for1 end

//[2] 구구단 2~9단 만들기

/* for( let i = 2 ; i <= 9; 1++) {
    console.log(`${i}x${i2} `);
    for
} */

// [반복문 없이]
console.log( `2x1 =${2*1}`)
console.log( `2x1 =${2*1}`)
console.log( `2x1 =${2*1}`)
console.log( `2x1 =${2*1}`)
console.log( `2x1 =${2*1}`)
console.log( `2x1 =${2*1}`)
console.log( `2x1 =${2*1}`)
////==========================


//[반복문]
//곱패턴 1부터 9까지 1씩 증가
for(let 곱 = 1 ; 곱<=9; 곱++) {     // 여기서 ;이걸 빼먹음
    console.log(`2 x ${곱} = ${2*곱}`)


}
// 단 패턴 : 2부터 9까지 1씩 증가

for( let 단 =1 ; 단<=9 ; 단++) {
    console.log(`${단} x1 = ${단 *1}`)
}
// (1) 곱마다 단실행 , (2) 단마다 곱 실행 v ---->단이 상위 곱이 하위
//단 1번 마다 곱은 전체 실행
// - 1회전마다 곱은 9번 실행된다.

for( let 단 =1 ; 단<=9 ; 단++) {

    for(let 곱 = 1 ; 곱<=9 곱++) {
        console.log(`${단} x ${곱} = ${단*곱}`)
    
    
    }//for2 end
}//for1 end        

// [3] 별 모양 출력 하기 , 입력받은 줄 수 만큼
// 예] 5 입력 했을경우 아래와 같이 5줄의 직삼각형 출력.

/*                      
    *               
    **              
    ***
    ****
    *****
    줄패턴 : 1부터 5까지 1씩 증가 반복, 줄바꿈 \n
    별 패턴 : 1부터 현재줄수까지 1씩 증가 반복
*/

/* 기본 */

/* let 입력숫자 = prompt(`숫자입력 :`);


console.log()
입력을 받는것까지는 좋았으나 출력을 어떻게 해야할지 방향성이 안잡힘 */

let 줄개수 = Number(prompt('줄수:')) // 출력할 줄의 개수
let out =''; // 출력할 데이터를 모아두는 변수

for(let line = 1; line <= 줄개수; line++) {
    //(1) 별출력

    for(let star =1 ; star <= line; star++) {

        otu += '*' //vs out = out + '*' , 누적합계 : 기존데이터와 연산

    }// for2 end
    //(2)줄바꿈
    
    out +='\n' //줄바꿈 \n //console.log()는 출력후 줄바꿈을 포함하기때문에 제대로 출력이 안되므로 이렇게 사용 
}//for2 end
console.log(out)
