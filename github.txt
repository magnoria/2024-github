간단설명
    1.버전관리(vcs) 
    2. 소스코드를 github 서버에 저장하고 다른 사람과 동시에 병렬 관리 가능하다.
    3. 특징
        1. 소프트웨어 개발에서 소스코드를 효과적으로 관리, 무료
        2. 기업들 github가 있음 참고한번 해보기
        3. 개발 프로젝트내 폴더 작업을 기록하고 버전(과거)관리, 추적
        4. 여러 사람들과 동일한 프로젝트(저장소-리포지토리)를 병렬 작업

    4. 대표 용어
        1. repository : 저장소 / 프로젝트의 파일이나 폴더를 저장하는 저장소
        2. Commit : 파일을 추가/ 변경 된 내용을 저장소에 저장하는 작업
        3. push : 추가/ 변경된 내용을 원격(깃허브 서버)  저장소에 업로드 작업

    5. 저장소 만드는 사람/계정, 파일 commit/push 이름.이메일 (서명)별로 존재한다.    

[vscode 와 github 연동]
    1.github 로 부터 회원가입
    2. git 설치 "  
    3. 64-bit Git for Windows Setup. 설치      
    4. vscode 왼쪽 메뉴에 [소스 제어]탭 클릭
    5. github 게시 -> 로그인 -> 웹페이지 로그인진행 -> 컨티뉴
    6. publish to github public repository 본인아이디/ 프로젝트명(최상위 폴더명)
    7. vscode 상단메뉴 -> 터미널 -> 새 터미널 -> +옆에 v 클릭 -> git bash
    8. 
        git user. name 확인 - git config --global user.name
        git user. name 설정 - git config --global user.name git아이디
        git user. email 확인 - git config --global user.email
        git user. email 설정 - git config --global user.email git아이디@이메일 포함

    9. vscode 왼쪽 메뉴 에 소스제어 탭 클릭 -> 메시지 입력칸 = 기록메시지

    10. 커밋 및 푸시
        * 만일 최초/pc변경시 git 사용이면 [git 로그인창] 나오면 브라우저 로그인 처리

    -만약 레포지토리 원격 없음이 뜨면 추가 누르고 위 push 및 commit


[git page]
    -git 회사에서 코드 저장소(리포지토리)의 코드를 호스팅 할수 있는 기능
    1. 호스팅할 저장소의 메인 페이지 파일명을 'index.html'
    2. 본인 git




[eclipce 로컬저장소(내pc), 원격저장소(gitserver)]

clone(복제): 원격 저장소로 부터 로컬저장소로 가져오는 행위
commit(완료) : 로컬 저장소로 부터 코드를 저장하는 행위
push(원격) : 로컬저장소로부터 완료(commit)된 코드들을 원격으로 올리기/업로드 행위

pull : 원격저장소로부터 



[버전 관리]vcs
    push를 할때마다 버전은 변경되고 그렇기에 버전을 일치 시켜야함으로 pull을 해서 동일하게 만든후 코드를 작성해야함




[브랜치 / 분기]
    1.정의 : 프로젝트를 하나의 저장소에서 각 브랜치마다 서로 다른 저장 상태/버전 관리 할 수 있도록 지원하는 기능
    2.목적 : 1.프로젝트 버전관리(배포용, 테스트용 등등) 2. 협업간의 각 사람들마다 코드 구분/분류
        - 기본값브랜치는  master/main
        - master/main 브랜치를 한사람이 사용하면 문제 없지만, 여러사람들이 동일한 브렌치로 동일한 저장소를 사용하면 문제가 생긴다.

    

[브랜치 생성/ 운영] = vscode
    1. 브랜치 생성
    왼쪽하단 브렌치 클릭 
    브랜치명입력후 엔터
    원격저장소에 적용하기 위해 push
    브랜치 생성후 최초 1번은 push 해야한다.

    2. 브랜치 변경
    왼쪽하단 브랜치 명으로 변경
    변경시 현재 상태를 commit and push 완료후에 하는걸 권장

    3. 다른 브랜치의 상태 가져오기 pull
