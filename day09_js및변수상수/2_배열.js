/* 
    - 타입
        - 각 프로그램 언어들이 데이터들을 분류 하는 것
        - 컴퓨터가 데이터를 인식하기 위해 
        - 문자 "",'',''
        - 불리언인지?? true, false
        - 숫자인지?? 154, 3.15, 747
        - 배열인지?? []


    - 배열 (Array)
        - 나열 : 열거 하기 위해 하나씩 줄로 하는 것
        - 열거 : 여러가지를 늘어놓음
        1. 배열이란? 순서대로 번호가 붙인 원소 들이 연속적인 형태로 구성된 *타입*
        2. 인덱스란? 순서대로 배정된 번호, 0번 시작 , 3개= 길이()총개수 는3, 인덱스 0~2

        3. 배열선언 : [] 대괄호
            let 변수명 = [값1, 값2, 값3] , []대괄호 안에서 , (쉼표)를 이용한 값을 구분하여 여러 열거한다.

        4. 배열전체 호출 :
            배열변수명
            
        5. 배열내 특정한 위치의 요소(값)호출
            변수명[인덱스]
        
        6.배역내 특정한 위치의 요소 (값) 수정
            1. 전체 수정
               1. 배열변수명  = [새로운 배열]
               2. 특정한 위치의 요소(값) 수정
                    배열변수명[인덱스] = 새로운값
        
        7. 배열내 (마지막 인덱스)새로운 값 추가
                        배열변수명.push(새로운값)

        8. 배열내 요소(데이터) 삭제
            배열변수명.splice(삭제할인덱스 , 삭제개수)
            배열변수명.splice(삭제할인덱스 , 삭제개수, 새로운값)
        
        9. 배열내 요소(데이터) 위치 찾기 , 찾을 데이터가 존재하면 찾은 인덱스번호 반환 아니면 -1
            배열변수명.indexof(찾을데이터)

*/
// *개발자도구 [크롬f12] 에서 consoletap에 데이터 출력할때 사용하는 출력 함수 , console.log()


// [1] 배열변수 선언
let pointArray = [100, 50, 30]
// [2] 배열변수의 값들을 호출
pointArray // 변수의 값 호출,
console.log(pointArray) // 변수의 값 호출 해서 개발자 도구에 출력
//[3] 배열변수의 특정한 위치의 요소(값) 호출
console.log(pointArray[0]) //0번 인덱스의 존재하는 데이터가 반환// 100
console.log(pointArray[1]) //1번 인덱스의 존재하는 데이터가 반환// 50
console.log(pointArray[2]) //1번 인덱스의 존재하는 데이터가 반환// 30
// [생각해보기] : 변수 몇개??, 리터럴 몇개??, 타입 몇개??, 변수는 몇개 저장하고 있을까요?
// [확인] 변수 :pointArray / 리터럴 : 100, 50, 30 / 타입 몇개 : 숫자타입 , 배열타입 / 변수는 몇개 저장
//* 변수는 여러개 데이터를 갖는 배열타입 1개 저장 * 변수는 1개의 데이터 만 저장 가능

// 변수는 배열타입을 참조하고 배열타입은 리터럴을 참조하고 있다. 
    // 컴퓨터 하드의 저장데이터를 꺼내오는것같은 느낌으로 이해해해라


//[4]
console.log(pointArray)                 // [100, 50, 30]
pointArray = ['유재석' , '강호동']
console.log(pointArray)                 //['유재석' , '강호동']

//[4-2] 배열변수의 특정 위치 요소(값) 수정
pointArray[0] = '신동엽'  //0번째 위치에 값을 '유재석'  ---> '강호동 ' 변경/ 수정
console.log(pointArray)         //['신동엽', '강호동']

//[생각해보기] : 만약에 배열변수가 ['유재석', '강호동'] 수정/변경 되면 기존 [100, 50, 30] 는 어떻게 될까?
// ---> 100 , 50, 30 => 각 리터럴/데이터 3개 / [10, 50, 30] => 3개의 데이터를 갖는/ 참조 배열 1개
//--> 즉] 배열은 사라지지만, 리터럴은 사라지지 않는다.

//[5] 배열변수의 데이터 (배열내 마지막 인덱스의) 추가 함수
pointArray.push('서장훈') //  ['유재석' , '강호동'] ---> push('서장훈')
console.log(pointArray)  // ['신동엽' , '강호동' , '서장훈']

//[6] 배열변수의 요소(데이터) 삭제 함수, 배열면수명.splice(삭제할인덱스번호, 삭제할개수)   splice- 접착
pointArray.splice // [100, 50, 30] -> splice( 1 , 1) 50이 없어지고 100과 30이 남음

pointArray.splice(0,1) // ['신동엽', '강호동', '서장훈']
console.log(pointArray)  //['강호동', '서장훈']
pointArray.splice(1,0 , '하하') // 1번 인덱스에 0개 삭제하고 ;;하하 대입한다.
console.log(pointArray) //['강호동', '하하' ,'서장훈']

//[7] 배열변수의 특정 데이터 찾기 함수, 배열변수명.indexOf(찾을데이터) :찾을데이터가 배열내 존재하면 인덱스 번호 반환, 없으면 -1 반환
console.log(pointArray.indexOf('서장훈')) // 2, '서장훈' 이라는 문자열 찾기
console.log(pointArray.indexOf('유재석')) // -1, '유재석' 이라는 문자열 찾기
// ++ 함수/연산은 무조건 1개의 결과를 반환한다.
//let 결과1 = 3 + 10          // 결과1 = 13
//let 결과2 = 더하기함수(3,10) // 결과2 = 13 , 더하기 함수는 두 값을 더해서 결과를 반환하는 함수
let 결과1 = pointArray('하하')  //결과1 = 1
console.log(결과1)     //1
let 결과2 = 3+10;